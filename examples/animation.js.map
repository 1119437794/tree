{"version":3,"sources":["webpack:///./examples/animation.js"],"names":[],"mappings":";;;;;;;;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,KAAM,kIAAN,C,CAPA;;;AAkBA,UAAS,OAAT,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,EAAmC;AACjC,OAAI,SAAS,KAAK,YAAlB;AACA,UAAO,4BAAa,IAAb,EAAmB,UAAnB,EAA+B;AACpC,UADoC,mBAC5B;AACN,WAAI,CAAC,IAAL,EAAW;AACT,cAAK,KAAL,CAAW,MAAX,GAAuB,KAAK,YAA5B;AACD,QAFD,MAEO;AACL,kBAAS,KAAK,YAAd;AACA,cAAK,KAAL,CAAW,MAAX,GAAoB,CAApB;AACD;AACF,MARmC;AASpC,WAToC,oBAS3B;AACP,YAAK,KAAL,CAAW,MAAX,IAAuB,OAAO,MAAP,GAAgB,CAAvC;AACD,MAXmC;AAYpC,QAZoC,iBAY9B;AACJ,YAAK,KAAL,CAAW,MAAX,GAAoB,EAApB;AACA;AACD;AAfmC,IAA/B,CAAP;AAiBD;;AAED,KAAM,YAAY;AAChB,QADgB,iBACV,IADU,EACJ,IADI,EACE;AAChB,YAAO,QAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAP;AACD,IAHe;AAIhB,QAJgB,iBAIV,IAJU,EAIJ,IAJI,EAIE;AAChB,YAAO,QAAQ,IAAR,EAAc,KAAd,EAAqB,IAArB,CAAP;AACD,IANe;AAOhB,SAPgB,kBAOT,IAPS,EAOH,IAPG,EAOG;AACjB,YAAO,QAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAP;AACD;AATe,EAAlB;;AAYA,KAAM,OACJ;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,IADF;AAEE,4CAAO,yBAAyB,EAAE,QAAQ,KAAV,EAAhC,GAFF;AAGE;AAAA;AAAA;AACE,yBAAkB,KADpB;AAEE,4BAAqB,CAAC,IAAD,CAFvB;AAGE,sBAAe;AAHjB;AAKE;AAAA;AAAA,SAAU,OAAM,UAAhB,EAA2B,KAAI,IAA/B;AACE,yDAAU,KAAI,KAAd,EAAoB,OAAM,MAA1B,GADF;AAEE;AAAA;AAAA,WAAU,OAAM,YAAhB,EAA6B,KAAI,KAAjC;AACE;AAAA;AAAA,aAAU,OAAM,YAAhB,EAA6B,KAAI,KAAjC;AACE,6DAAU,OAAM,MAAhB,GADF;AAEE,6DAAU,OAAM,MAAhB;AAFF,UADF;AAKE,2DAAU,KAAI,KAAd,EAAoB,OAAM,MAA1B;AALF;AAFF;AALF;AAHF,EADF;;AAuBA,oBAAS,MAAT,CAAgB,IAAhB,EAAsB,SAAS,cAAT,CAAwB,iBAAxB,CAAtB,E","file":"animation.js","sourcesContent":["/* eslint no-console:0 */\nimport 'rc-tree/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tree, { TreeNode } from 'rc-tree';\nimport cssAnimation from 'css-animation';\n\nconst STYLE = `\n.collapse {\n  overflow: hidden;\n  display: block;\n}\n\n.collapse-active {\n  transition: height 0.3s ease-out;\n}\n`;\n\nfunction animate(node, show, done) {\n  let height = node.offsetHeight;\n  return cssAnimation(node, 'collapse', {\n    start() {\n      if (!show) {\n        node.style.height = `${node.offsetHeight}px`;\n      } else {\n        height = node.offsetHeight;\n        node.style.height = 0;\n      }\n    },\n    active() {\n      node.style.height = `${show ? height : 0}px`;\n    },\n    end() {\n      node.style.height = '';\n      done();\n    },\n  });\n}\n\nconst animation = {\n  enter(node, done) {\n    return animate(node, true, done);\n  },\n  leave(node, done) {\n    return animate(node, false, done);\n  },\n  appear(node, done) {\n    return animate(node, true, done);\n  },\n};\n\nconst demo = (\n  <div>\n    <h2>expanded</h2>\n    <style dangerouslySetInnerHTML={{ __html: STYLE }}/>\n    <Tree\n      defaultExpandAll={false}\n      defaultExpandedKeys={['p1']}\n      openAnimation={animation}\n    >\n      <TreeNode title=\"parent 1\" key=\"p1\">\n        <TreeNode key=\"p10\" title=\"leaf\"/>\n        <TreeNode title=\"parent 1-1\" key=\"p11\">\n          <TreeNode title=\"parent 2-1\" key=\"p21\">\n            <TreeNode title=\"leaf\"/>\n            <TreeNode title=\"leaf\"/>\n          </TreeNode>\n          <TreeNode key=\"p22\" title=\"leaf\"/>\n        </TreeNode>\n      </TreeNode>\n    </Tree>\n  </div>\n);\n\nReactDOM.render(demo, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/animation.js\n **/"],"sourceRoot":""}